What happens when you initialize a repository? Why do you need to do it?
When I initialize a repository, with the command git init, a new directory called .git is created.
I can create a repository in an empty directory or in a not empty one. In the latter case, the existing files aren't added automatically to the repository and they remain 'untracked'.
I need to create a repository to add some files to the version control system.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area contains the files which will be committed in the repository while the working directory contains also the untracked files.
It is useful to recognize files to add to the version control system versus files to don't.

How can you use the staging area to make sure you have one commit per logical change?
Inserting in the staging area only the files related to one logical change and committing, once for each logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A typical situation is to keep a branch only for bug fixing and another one for development.

How do the diagrams help you visualize the branch structure?
Showing the relationship between each commit.
